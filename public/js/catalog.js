document.addEventListener('DOMContentLoaded', () => {
    const projects = [
        {
            id: 1,
            title: '–ñ–ö ¬´–ó–µ–ª—ë–Ω—ã–π –ë–µ—Ä–µ–≥¬ª',
            description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —É —Ä–µ–∫–∏ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º',
            price: '–æ—Ç 5,2 –º–ª–Ω ‚ÇΩ',
            image: '/images/green-shore.jpg',
            details: '3 –∫–æ—Ä–ø—É—Å–∞, 25 —ç—Ç–∞–∂–µ–π, –ø–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥',
            tags: ['green']
        },
        {
            id: 2,
            title: '–ñ–ö ¬´–≠–∫–æ –•–∞—É—Å¬ª',
            description: '–≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–º–∞ —Å —Å–æ–ª–Ω–µ—á–Ω—ã–º–∏ –ø–∞–Ω–µ–ª—è–º–∏',
            price: '–æ—Ç 7,8 –º–ª–Ω ‚ÇΩ',
            image: '/images/eco-house.jpg',
            details: '–ü–∞—Å—Å–∏–≤–Ω—ã–µ –¥–æ–º–∞ –∫–ª–∞—Å—Å–∞ –ê++, —Å–æ–ª–Ω–µ—á–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–∏',
            tags: ['eco']
        },
        {
            id: 3,
            title: '–ñ–ö ¬´–õ–µ—Å–Ω—ã–µ –ü–æ–ª—è–Ω—ã¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å –≤–∏–¥–æ–º –Ω–∞ –ª–µ—Å –∏ —Ç–µ—Ä—Ä–∞—Å–∞–º–∏',
            price: '–æ—Ç 9,1 –º–ª–Ω ‚ÇΩ',
            image: '/images/forest-fields.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏',
            tags: ['green']
        },
        {
            id: 4,
            title: '–ñ–ö ¬´–†–µ—á–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å –≤–∏–¥–æ–º –Ω–∞ —Ä–µ–∫—É –ú–æ—Å–∫–≤–∞',
            price: '–æ—Ç 10,5 –º–ª–Ω ‚ÇΩ',
            image: '/images/river.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏',
            tags: ['air']
        },
        {
            id: 5,
            title: '–ñ–ö ¬´–ß—É–¥–µ—Å–Ω—ã–µ –∑–æ—Ä–∏¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å –≤–∏–¥–æ–º –Ω–∞ –ú–æ—Å–∫–≤–∞-–°–∏—Ç–∏ –∏ –ú–æ—Å–∫–≤—É-—Ä–µ–∫—É',
            price: '–æ—Ç 7,23 –º–ª–Ω ‚ÇΩ',
            image: '/images/river2.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏',
            tags: ['air']
        },
        {
            id: 6,
            title: '–ñ–ö ¬´–ü–∞—Ä—è—â–∏–µ –æ–±–ª–∞–∫–∞¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º –∏ —Ç–µ—Ä—Ä–∞—Å–∞–º–∏',
            price: '–æ—Ç 12,1 –º–ª–Ω ‚ÇΩ',
            image: '/images/nicejk.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏',
            tags: ['green']
        },
        {
            id: 7,
            title: '–ñ–ö ¬´–ü–∞—Ä—è—â–∏–µ –æ–±–ª–∞–∫–∞¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º –∏ —Ç–µ—Ä—Ä–∞—Å–∞–º–∏',
            price: '–æ—Ç 12,1 –º–ª–Ω ‚ÇΩ',
            image: '/images/nicejk.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏',
            tags: ['green']
        },
        {
            id: 8,
            title: '–ñ–ö ¬´–ü–∞—Ä—è—â–∏–µ –æ–±–ª–∞–∫–∞¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º –∏ —Ç–µ—Ä—Ä–∞—Å–∞–º–∏',
            price: '–æ—Ç 12,1 –º–ª–Ω ‚ÇΩ',
            image: '/images/nicejk.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏',
            tags: ['green']
        },
        {
            id: 9,
            title: '–ñ–ö ¬´–ü–∞—Ä—è—â–∏–µ –æ–±–ª–∞–∫–∞¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º –∏ —Ç–µ—Ä—Ä–∞—Å–∞–º–∏',
            price: '–æ—Ç 12,1 –º–ª–Ω ‚ÇΩ',
            image: '/images/nicejk.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏',
            tags: ['green', 'air']
        }
    ];

    const renderProjects = (filteredProjects) => {
        const grid = document.getElementById('catalog-grid');
        if (!grid) return;

        grid.innerHTML = filteredProjects.map(project => `
            <div class="catalog-card" data-tags="${project.tags.join(' ')}">
                <img src="${project.image}" alt="${project.title}">
                <div class="card-content">
                    ${project.tags.length > 0
                ? `<div class="card-tags">
                         ${project.tags.map(tag => `
    <span class="card-tag card-tag--${tag}">
        ${tag === 'green' ? 'üåø –ó–µ–ª—ë–Ω—ã–µ –∑–æ–Ω—ã' :
                        tag === 'eco' ? '‚ôªÔ∏è –≠–∫–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' :
                            tag === 'air' ? 'üéà –°–≤–µ–∂–∏–π –≤–æ–∑–¥—É—Ö' :
                                tag}
    </span>
`).join('')}
                          </div>`
                : ''
            }
                    <h3>${project.title}</h3>
                    <p>${project.description}</p>
                    <div class="price">${project.price}</div>
                    <a href="/object.html?id=${project.id}" class="btn btn--secondary btn--small">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
                </div>
            </div>
        `).join('');
    };

    const filterSelect = document.querySelector('.filter-select');
    if (filterSelect) {
        filterSelect.addEventListener('change', (e) => {
            const value = e.target.value;
            const filtered = value === 'all'
                ? projects
                : projects.filter(p => p.tags.includes(value));
            renderProjects(filtered);
        });
    }

    const searchInput = document.querySelector('.search-input');
    if (searchInput) {
        searchInput.addEventListener('input', (e) => {
            const term = e.target.value.toLowerCase();
            const filtered = projects.filter(p =>
                p.title.toLowerCase().includes(term) ||
                p.description.toLowerCase().includes(term)
            );
            renderProjects(filtered);
        });
    }

    renderProjects(projects);
});

const filtersSection = document.getElementById('filters');

const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('visible');
            observer.unobserve(entry.target);
        }
    });
}, { threshold: 0.1 });

if (filtersSection) {
    observer.observe(filtersSection);
}

document.addEventListener("DOMContentLoaded", () => {
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll(".nav__link");

    navLinks.forEach(link => {
        const href = link.getAttribute("href").replace(/\/$/, "");
        const path = currentPath.replace(/\/$/, "");

        if (path === href) {
            link.classList.add("active");
        }
    });
});

document.querySelector('.btn-reset-filters')?.addEventListener('click', () => {
    document.querySelector('.filter-select').value = 'all';
    document.querySelector('.search-input').value = '';
    const event = new Event('input', { bubbles: true });
    document.querySelector('.search-input').dispatchEvent(event);
});

document.addEventListener("DOMContentLoaded", function () {
    const preloader = document.getElementById("preloader");

    setTimeout(() => {
        preloader.classList.add("preloader-hidden");
    }, 500);

    document.querySelectorAll('a[href]').forEach(link => {
        link.addEventListener("click", function (e) {
            if (!this.href.startsWith(location.origin)) return;

            e.preventDefault();
            preloader.classList.remove("preloader-hidden");

            setTimeout(() => {
                window.location.href = this.href;
            }, 800);
        });
    });
});