document.addEventListener('DOMContentLoaded', () => {
    const projects = [
        {
            id: 1,
            title: '–ñ–ö ¬´–ó–µ–ª—ë–Ω—ã–π –ë–µ—Ä–µ–≥¬ª',
            description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —É —Ä–µ–∫–∏ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º',
            price: '–æ—Ç 5,2 –º–ª–Ω ‚ÇΩ',
            image: '/images/green-shore.jpg',
            details: '3 –∫–æ—Ä–ø—É—Å–∞, 25 —ç—Ç–∞–∂–µ–π, –ø–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥'
        },
        {
            id: 2,
            title: '–ñ–ö ¬´–≠–∫–æ –•–∞—É—Å¬ª',
            description: '–≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–º–∞ —Å —Å–æ–ª–Ω–µ—á–Ω—ã–º–∏ –ø–∞–Ω–µ–ª—è–º–∏',
            price: '–æ—Ç 7,8 –º–ª–Ω ‚ÇΩ',
            image: '/images/eco-house.jpg',
            details: '–ü–∞—Å—Å–∏–≤–Ω—ã–µ –¥–æ–º–∞ –∫–ª–∞—Å—Å–∞ –ê++, —Å–æ–ª–Ω–µ—á–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–∏'
        },
        {
            id: 3,
            title: '–ñ–ö ¬´–õ–µ—Å–Ω—ã–µ –ü–æ–ª—è–Ω—ã¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å –≤–∏–¥–æ–º –Ω–∞ –ª–µ—Å –∏ —Ç–µ—Ä—Ä–∞—Å–∞–º–∏ –∏ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º',
            price: '–æ—Ç 9,1 –º–ª–Ω ‚ÇΩ',
            image: '/images/forest-fields.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏'
        },
        {
            id: 4,
            title: '–ñ–ö ¬´–†–µ—á–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å –≤–∏–¥–æ–º –Ω–∞ —Ä–µ–∫—É –º–æ—Å–∫–≤—É –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º',
            price: '–æ—Ç 10,5 –º–ª–Ω ‚ÇΩ',
            image: '/images/river.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏'
        },
        {
            id: 5,
            title: '–ñ–ö ¬´–ß—É–¥–µ—Å–Ω—ã–µ –∑–æ—Ä–∏¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å –≤–∏–¥–æ–º –Ω–∞ –º–æ—Å–∫–≤–∞-—Å–∏—Ç–∏ –∏ –º–æ—Å–∫–≤—É —Ä–µ–∫—É',
            price: '–æ—Ç 7,23 –º–ª–Ω ‚ÇΩ',
            image: '/images/river2.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏'
        },
        {
            id: 6,
            title: '–ñ–ö ¬´–ü–∞—Ä—è—â–∏–µ –æ–±–ª–∞–∫–∞¬ª',
            description: '–ö–≤–∞—Ä—Ç–∏—Ä—ã —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º –∏ —Ç–µ—Ä—Ä–∞—Å–∞–º–∏',
            price: '–æ—Ç 12,1 –º–ª–Ω ‚ÇΩ',
            image: '/images/nicejk.jpg',
            details: '–í–∏–¥–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏'
        }
    ];

    renderProjects(projects);
});

function renderProjects(projects) {
    const grid = document.querySelector('.projects-grid');

    grid.innerHTML = projects.map(project => `
      <div class="project-card" data-id="${project.id}">
        <div class="project-image-container">
          <img src="${project.image}" alt="${project.title}" class="project-image">
          <div class="project-badge">–ù–æ–≤–∏–Ω–∫–∞</div>
        </div>
        <div class="project-content">
          <h3>${project.title}</h3>
          <p>${project.description}</p>
          <div class="project-price">${project.price}</div>
          <div class="project-details" style="display:none">${project.details}</div>
          <button class="btn btn-more">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
        </div>
      </div>
    `).join('');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    document.querySelectorAll('.btn-more').forEach(btn => {
        btn.addEventListener('click', function () {
            const details = this.parentElement.querySelector('.project-details');
            details.style.display = details.style.display === 'none' ? 'block' : 'none';
        });
    });
}


function showModal(id) {
    const modal = document.getElementById(id);
    modal.classList.add("show");
    modal.style.display = "flex";
}

function closeModal() {
    const modal = document.getElementById("callbackModal");
    modal.classList.remove("show");
    setTimeout(() => {
        modal.style.display = "none";
    }, 300);
}

document.querySelector('.modal__overlay')?.addEventListener('click', closeModal);

document.getElementById("callbackForm").addEventListener("submit", function (e) {
    e.preventDefault();

    alert("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–∫–æ—Ä–æ –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º.");

    document.querySelector("#callbackForm input[type='text']").value = "";
    document.querySelector("#callbackForm input[type='tel']").value = "";

    closeModal();
});

document.addEventListener("DOMContentLoaded", function () {
    const preloader = document.getElementById("preloader");

    setTimeout(() => {
        preloader.classList.add("preloader-hidden");
    }, 500);

    document.querySelectorAll('a[href]').forEach(link => {
        link.addEventListener("click", function (e) {
            if (!this.href.startsWith(location.origin)) return;

            e.preventDefault();
            preloader.classList.remove("preloader-hidden");

            setTimeout(() => {
                window.location.href = this.href;
            }, 800);
        });
    });
});

document.addEventListener("DOMContentLoaded", () => {
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll(".nav__link");

    navLinks.forEach(link => {
        const href = link.getAttribute("href").replace(/\/$/, "");
        const path = currentPath.replace(/\/$/, "");

        if (path === href) {
            link.classList.add("active");
        }
    });
});

const map = L.map('projects-map').setView([55.751244, 37.618423], 12);

L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {
    attribution: '¬© OpenTopoMap contributors',
    maxZoom: 17,
}).addTo(map);

const projects = [
    {
        title: '–ñ–ö ¬´–ó–µ–ª—ë–Ω—ã–π –ë–µ—Ä–µ–≥¬ª',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —É —Ä–µ–∫–∏ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–∞—Ä–∫–æ–º',
        price: '–æ—Ç 5,2 –º–ª–Ω ‚ÇΩ',
        image: '/images/green-shore.jpg',
        coords: [55.751244, 37.618423],
        tags: ['green']
    },
    {
        title: '–ñ–ö ¬´–≠–∫–æ –•–∞—É—Å¬ª',
        description: '–≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–º–∞ —Å —Å–æ–ª–Ω–µ—á–Ω—ã–º–∏ –ø–∞–Ω–µ–ª—è–º–∏',
        price: '–æ—Ç 7,8 –º–ª–Ω ‚ÇΩ',
        image: '/images/eco-house.jpg',
        coords: [55.761244, 37.628423],
        tags: ['eco']
    }
];

projects.forEach(project => {
    const marker = L.marker(project.coords).addTo(map);
    marker.bindPopup(`
     <div style="max-width: 250px; text-align: center;">
       <strong>${project.title}</strong><br>
       <em>${project.price}</em><br>
       <small>${project.description}</small>
     </div>
   `);
});

const ecoIcon = L.divIcon({
    className: 'custom-marker',
    html: '<span>üåø</span>',
    iconSize: [32, 32],
    iconAnchor: [16, 32],
    popupAnchor: [0, -32]
});

L.marker([55.741244, 37.608423], { icon: ecoIcon }).addTo(map)
    .bindPopup("<strong>–ù–æ–≤—ã–π –ñ–ö –≠–∫–æ–¢–∞—É–Ω</strong><br>–°–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è!");